# =============================================================================
# LocallyTrip Environment Configuration for Ubuntu Server
# Copy this file to .env and customize for your production environment
# =============================================================================

# =============================================================================
# DOMAIN CONFIGURATION
# =============================================================================
# Primary domain for your LocallyTrip installation
# Examples: 
#   - locallytrip.com (production)
#   - staging.locallytrip.com (staging)
#   - your-domain.com (custom domain)
#   - localhost (development/testing)
DOMAIN=locallytrip.com

# Alternative domains (comma-separated, optional)
# Used for nginx server_name directive
ALT_DOMAINS=www.locallytrip.com

# Application URLs (auto-generated from DOMAIN)
NEXT_PUBLIC_WEBSITE_URL=https://${DOMAIN}
NEXT_PUBLIC_API_URL=https://${DOMAIN}/api
NEXT_PUBLIC_ADMIN_URL=https://${DOMAIN}/admin
NEXT_PUBLIC_IMAGES=https://${DOMAIN}/api/images

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
NODE_ENV=production

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
DB_HOST=postgres
DB_PORT=5432
DB_NAME=locallytrip_prod
DB_USER=locallytrip_prod_user
# CRITICAL: Change this to a secure password
DB_PASSWORD=your-super-secure-database-password-here

# PostgreSQL superuser password
POSTGRES_PASSWORD=your-secure-postgres-password-here

# =============================================================================
# JWT AUTHENTICATION
# =============================================================================
# CRITICAL: Generate secure JWT secret (minimum 32 characters)
# Command: openssl rand -base64 64
JWT_SECRET=your-super-secure-jwt-secret-key-minimum-32-characters
JWT_EXPIRES_IN=7d

# Session configuration
SESSION_SECRET=your-session-secret-here

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================
# Enable SSL/TLS (true/false)
SSL_ENABLED=true

# Email for Let's Encrypt certificate registration
SSL_EMAIL=admin@locallytrip.com

# SSL certificate paths (auto-generated if using Let's Encrypt)
SSL_CERT_PATH=/etc/letsencrypt/live/${DOMAIN}/fullchain.pem
SSL_KEY_PATH=/etc/letsencrypt/live/${DOMAIN}/privkey.pem

# SSL Mode: letsencrypt or selfsigned
SSL_MODE=letsencrypt

# Fallback to self-signed certificates if Let's Encrypt fails
SELF_SIGNED_FALLBACK=true

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================
# Configure SMTP for sending emails (registration, password reset, etc.)
EMAIL_SERVICE=gmail
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_SECURE=false
EMAIL_USER=your-email@gmail.com
EMAIL_PASSWORD=your-app-password
EMAIL_FROM=noreply@${DOMAIN}

# =============================================================================
# SERVICES CONFIGURATION
# =============================================================================
# Port mappings for Docker containers
WEB_PORT=3000
ADMIN_PORT=3002
API_PORT=3001
NGINX_PORT=80
NGINX_SSL_PORT=443
DB_PORT=5432

# Internal server ports (usually don't need to change)
BACKEND_PORT=3001

# PostgreSQL specific port
POSTGRES_PORT=5432

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# CORS allowed origins (comma-separated)
CORS_ORIGINS=https://${DOMAIN},https://www.${DOMAIN}

# Rate limiting (requests per minute)
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# Security headers
SECURITY_HEADERS_ENABLED=true

# =============================================================================
# NGINX CONFIGURATION
# =============================================================================
# Nginx configuration file path
NGINX_CONFIG_FILE=./nginx/conf.d/default.conf

# Client max body size (for file uploads)
CLIENT_MAX_BODY_SIZE=50M

# Proxy timeouts
PROXY_CONNECT_TIMEOUT=60s
PROXY_SEND_TIMEOUT=60s
PROXY_READ_TIMEOUT=60s

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
# Maximum file size for uploads (in bytes)
MAX_FILE_SIZE=10485760
# Upload directory
UPLOAD_DIR=/app/public/uploads

# =============================================================================
# MONITORING & LOGGING
# =============================================================================
# Log levels
LOG_LEVEL=info
NGINX_LOG_LEVEL=warn

# Enable access logs
ACCESS_LOGS_ENABLED=true

# Log file paths
LOG_FILE=/app/logs/app.log

# Health check settings
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================
# Backup settings for database and uploads
BACKUP_RETENTION_DAYS=30
BACKUP_DIR=/home/locallytrip/backups

# =============================================================================
# UBUNTU SERVER SPECIFIC SETTINGS
# =============================================================================
# Server paths
PROJECT_PATH=/home/locallytrip/locallytrip
BACKUP_PATH=/home/locallytrip/backups
LOG_PATH=/home/locallytrip/logs

# System configuration
TZ=Asia/Jakarta
LANG=en_US.UTF-8

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================
# Docker build arguments
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

# Container restart policy
RESTART_POLICY=unless-stopped

# =============================================================================
# DEVELOPMENT OVERRIDES
# =============================================================================
# Uncomment these for development/testing environments

# For local development without SSL
# SSL_ENABLED=false
# DOMAIN=localhost
# NEXT_PUBLIC_API_URL=http://localhost:3001

# For staging environment
# DOMAIN=staging.locallytrip.com
# NODE_ENV=staging

# =============================================================================
# CONFIGURATION INSTRUCTIONS
# =============================================================================
# 1. DOMAIN SETUP:
#    - Replace 'locallytrip.com' with your actual domain
#    - Ensure DNS records point to your Ubuntu server IP:
#      your-domain.com        → Server IP
#      www.your-domain.com    → Server IP

# 2. DATABASE PASSWORD:
#    - Generate secure password: openssl rand -base64 32
#    - Replace 'your-super-secure-database-password-here'

# 3. JWT SECRET:
#    - Generate secure secret: openssl rand -base64 64
#    - Replace 'your-super-secure-jwt-secret-key-minimum-32-characters'

# 4. EMAIL CONFIGURATION:
#    - For Gmail: Use App Password (not regular password)
#    - Enable 2FA and generate App Password in Google Account settings
#    - Replace 'your-email@gmail.com' and 'your-app-password'

# 5. SSL CONFIGURATION:
#    - Update SSL_EMAIL with a valid email address
#    - Ensure domain DNS is properly configured before running SSL setup

# 6. SECURITY NOTES:
#    - Replace all placeholder passwords with strong, unique values
#    - Consider using Docker secrets for sensitive data in production
#    - Test SSL configuration with staging environment first
#    - Backup this file securely - it contains sensitive information

# 5. SSL CERTIFICATE:
#    - For Let's Encrypt: Set SSL_MODE=letsencrypt
#    - Replace 'admin@your-domain.com' with valid email
#    - For testing: Set SSL_MODE=selfsigned

# 6. SESSION SECRET:
#    - Generate: openssl rand -base64 32
#    - Replace 'your-session-secret-key-here'

# ===================================================================
# SECURITY CHECKLIST
# ===================================================================

# [ ] Changed all default passwords
# [ ] Generated secure JWT secret (>32 chars)
# [ ] Configured proper domain names
# [ ] Set up email authentication
# [ ] Configured SSL certificate email
# [ ] Set appropriate CORS origins
# [ ] Reviewed rate limiting settings
# [ ] Set proper timezone
# [ ] Secured file upload limits

# ===================================================================
# COMMANDS TO GENERATE SECURE VALUES
# ===================================================================

# Database Password:
# openssl rand -base64 32

# JWT Secret:
# openssl rand -base64 64

# Session Secret:  
# openssl rand -base64 32

# Test Configuration:
# ./ubuntu-quick-commands.sh health
